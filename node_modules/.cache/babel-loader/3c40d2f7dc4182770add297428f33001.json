{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\Inceptra\\\\src\\\\components\\\\gallery.jsx\";\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"./Lightbox.css\";\n\nvar LightboxPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LightboxPage, _React$Component);\n\n  function LightboxPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LightboxPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LightboxPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      photoIndex: 0,\n      isOpen: false,\n      images: ['https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(58).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(61).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(62).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(60).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(66).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(70).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(74).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(64).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(77).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(78).jpg', 'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(76).jpg'],\n      colWidth: [3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3]\n    };\n\n    _this.renderImages = function () {\n      var photoIndex = -1;\n      var images = _this.state.images;\n      return images.map(function (imageSrc, index) {\n        photoIndex++;\n        var privateKey = photoIndex;\n        return React.createElement(MDBCol, {\n          md: _this.state.colWidth[index],\n          key: photoIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"figure\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: imageSrc,\n          alt: \"Gallery\",\n          className: \"img-fluid z-depth-1\",\n          onClick: function onClick() {\n            return _this.setState({\n              photoIndex: privateKey,\n              isOpen: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        })));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LightboxPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          photoIndex = _this$state.photoIndex,\n          isOpen = _this$state.isOpen,\n          images = _this$state.images;\n      return React.createElement(MDBContainer, {\n        className: \"mt-5 p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mdb-lightbox p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(MDBRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.renderImages())), isOpen && React.createElement(Lightbox, {\n        mainSrc: images[photoIndex],\n        nextSrc: images[(photoIndex + 1) % images.length],\n        prevSrc: images[(photoIndex + images.length - 1) % images.length],\n        imageTitle: photoIndex + 1 + \"/\" + images.length,\n        onCloseRequest: function onCloseRequest() {\n          return _this2.setState({\n            isOpen: false\n          });\n        },\n        onMovePrevRequest: function onMovePrevRequest() {\n          return _this2.setState({\n            photoIndex: (photoIndex + images.length - 1) % images.length\n          });\n        },\n        onMoveNextRequest: function onMoveNextRequest() {\n          return _this2.setState({\n            photoIndex: (photoIndex + 1) % images.length\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LightboxPage;\n}(React.Component);\n\nexport default LightboxPage;","map":{"version":3,"sources":["C:/React/Inceptra/src/components/gallery.jsx"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBBtn","Lightbox","LightboxPage","state","photoIndex","isOpen","images","colWidth","renderImages","map","imageSrc","index","privateKey","setState","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"./Lightbox.css\";\r\n\r\nclass LightboxPage extends React.Component {\r\n  state = {\r\n    photoIndex: 0,\r\n    isOpen: false,\r\n    images: [\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(58).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(61).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(62).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(60).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(66).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(70).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(74).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(64).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(77).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(78).jpg',\r\n      'https://mdbootstrap.com/img/Photos/Lightbox/Thumbnail/img%20(76).jpg',\r\n    ],\r\n    colWidth: [3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3]\r\n  }\r\n\r\n  renderImages = () => {\r\n    let photoIndex = -1;\r\n    const { images } = this.state;\r\n\r\n    return images.map((imageSrc, index) => {\r\n      photoIndex++;\r\n      const privateKey = photoIndex;\r\n      return (\r\n          \r\n        <MDBCol md={this.state.colWidth[index]} key={photoIndex}>\r\n          <figure>\r\n            <img\r\n              src={imageSrc}\r\n              alt=\"Gallery\"\r\n              className=\"img-fluid z-depth-1\"\r\n              onClick={() =>\r\n                this.setState({ photoIndex: privateKey, isOpen: true })\r\n              }\r\n            />\r\n          </figure>\r\n        </MDBCol>\r\n      );\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { photoIndex, isOpen, images } = this.state;\r\n    return (\r\n      <MDBContainer className=\"mt-5 p-3\" >\r\n        <div className=\"mdb-lightbox p-3\">\r\n          <MDBRow>\r\n            {this.renderImages()}\r\n          </MDBRow>\r\n        </div>\r\n        {isOpen && (\r\n          <Lightbox\r\n            mainSrc={images[photoIndex]}\r\n            nextSrc={images[(photoIndex + 1) % images.length]}\r\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n            imageTitle={photoIndex + 1 + \"/\" + images.length}\r\n            onCloseRequest={() => this.setState({ isOpen: false })}\r\n            onMovePrevRequest={() =>\r\n              this.setState({\r\n                photoIndex: (photoIndex + images.length - 1) % images.length\r\n              })\r\n            }\r\n            onMoveNextRequest={() =>\r\n              this.setState({\r\n                photoIndex: (photoIndex + 1) % images.length\r\n              })\r\n            }\r\n          />\r\n        )}\r\n      </MDBContainer >\r\n    );\r\n  }\r\n}\r\n\r\nexport default LightboxPage;"]},"metadata":{},"sourceType":"module"}