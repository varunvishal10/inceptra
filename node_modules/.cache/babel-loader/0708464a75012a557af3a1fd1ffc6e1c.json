{"ast":null,"code":"import _classCallCheck from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React\\\\Inceptra\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React\\\\Inceptra\\\\src\\\\components\\\\countdown.js\";\nimport React, { Component } from \"react\";\nimport { MDBBtn, MDBCol, MDBContainer, MDBRow } from \"mdbreact\";\nimport \"./ct.css\";\n\nvar Countdown =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Countdown, _React$Component);\n\n  function Countdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Countdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      days: undefined,\n      hours: undefined,\n      minutes: undefined,\n      seconds: undefined\n    };\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        var _this2$props = _this2.props,\n            timeTillDate = _this2$props.timeTillDate,\n            timeFormat = _this2$props.timeFormat;\n        var then = moment(timeTillDate, timeFormat);\n        var now = moment();\n        var countdown = moment(then - now);\n        var days = countdown.format('D');\n        var hours = countdown.format('HH');\n        var minutes = countdown.format('mm');\n        var seconds = countdown.format('ss');\n\n        _this2.setState({\n          days: days,\n          hours: hours,\n          minutes: minutes,\n          seconds: seconds\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          days = _this$state.days,\n          hours = _this$state.hours,\n          minutes = _this$state.minutes,\n          seconds = _this$state.seconds;\n      var daysRadius = mapNumber(days, 30, 0, 0, 360);\n      var hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n      var minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n      var secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n      if (!seconds) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"countdown-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, days && React.createElement(\"div\", {\n        className: \"countdown-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(SVGCircle, {\n        radius: daysRadius,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), days, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"days\")), hours && React.createElement(\"div\", {\n        className: \"countdown-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(SVGCircle, {\n        radius: hoursRadius,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), hours, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"hours\")), minutes && React.createElement(\"div\", {\n        className: \"countdown-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(SVGCircle, {\n        radius: minutesRadius,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), minutes, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"minutes\")), seconds && React.createElement(\"div\", {\n        className: \"countdown-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(SVGCircle, {\n        radius: secondsRadius,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), seconds, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"seconds\"))));\n    }\n  }]);\n\n  return Countdown;\n}(React.Component);\n\nvar SVGCircle = function SVGCircle(_ref) {\n  var radius = _ref.radius;\n  return React.createElement(\"svg\", {\n    className: \"countdown-svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#333\",\n    \"stroke-width\": \"4\",\n    d: describeArc(50, 50, 48, 0, radius),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(Countdown, {\n  timeTillDate: \"04 05 2020, 6:00 am\",\n  timeFormat: \"MM DD YYYY, h:mm a\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), document.getElementById('app')); // From stackoverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n  var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n  var d = [\"M\", start.x, start.y, \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(\" \");\n  return d;\n} // Stackoverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\n\n\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\nexport default Countdown;","map":{"version":3,"sources":["C:/React/Inceptra/src/components/countdown.js"],"names":["React","Component","MDBBtn","MDBCol","MDBContainer","MDBRow","Countdown","state","days","undefined","hours","minutes","seconds","interval","setInterval","props","timeTillDate","timeFormat","then","moment","now","countdown","format","setState","clearInterval","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius","SVGCircle","radius","describeArc","ReactDOM","render","document","getElementById","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","startAngle","endAngle","start","end","largeArcFlag","d","join","number","in_min","in_max","out_min","out_max"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBBtn, MDBCol, MDBContainer, MDBRow } from \"mdbreact\";\r\nimport \"./ct.css\";\r\n\r\nclass Countdown extends React.Component {\r\n\tstate = {\r\n\t\tdays: undefined,\r\n\t\thours: undefined,\r\n\t\tminutes: undefined,\r\n\t\tseconds: undefined\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tthis.interval = setInterval(() => {\r\n\t\t\tconst { timeTillDate, timeFormat } = this.props;\r\n\t\t\tconst then = moment(timeTillDate, timeFormat);\r\n\t\t\tconst now = moment();\r\n\t\t\tconst countdown = moment(then - now);\r\n\t\t\tconst days = countdown.format('D');\r\n\t\t\tconst hours = countdown.format('HH');\r\n\t\t\tconst minutes = countdown.format('mm');\r\n\t\t\tconst seconds = countdown.format('ss');\r\n\r\n\t\t\tthis.setState({ days, hours, minutes, seconds });\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif(this.interval) {\r\n\t\t\tclearInterval(this.interval);\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { days, hours, minutes, seconds } = this.state;\r\n\t\tconst daysRadius = mapNumber(days, 30, 0, 0, 360);\r\n\t\tconst hoursRadius = mapNumber(hours, 24, 0, 0, 360);\r\n\t\tconst minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\r\n\t\tconst secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\r\n\r\n\t\tif(!seconds) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className='countdown-wrapper'>\r\n\t\t\t\t\t{days && (\r\n\t\t\t\t\t\t<div className='countdown-item'>\r\n\t\t\t\t\t\t\t<SVGCircle radius={daysRadius} />\r\n\t\t\t\t\t\t\t{days} \r\n\t\t\t\t\t\t\t<span>days</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{hours && (\r\n\t\t\t\t\t\t<div className='countdown-item'>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<SVGCircle radius={hoursRadius} />\r\n\t\t\t\t\t\t\t{hours} \r\n\t\t\t\t\t\t\t<span>hours</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{minutes && (\r\n\t\t\t\t\t\t<div className='countdown-item'>\r\n\t\t\t\t\t\t\t<SVGCircle radius={minutesRadius} />\r\n\t\t\t\t\t\t\t{minutes} \r\n\t\t\t\t\t\t\t<span>minutes</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{seconds && (\r\n\t\t\t\t\t\t<div className='countdown-item'>\r\n\t\t\t\t\t\t\t<SVGCircle radius={secondsRadius} />\r\n\t\t\t\t\t\t\t{seconds} \r\n\t\t\t\t\t\t\t<span>seconds</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst SVGCircle = ({ radius }) => (\r\n\t<svg className='countdown-svg'>\r\n\t\t<path fill=\"none\" stroke=\"#333\" stroke-width=\"4\" d={describeArc(50, 50, 48, 0, radius)}/>\r\n\t</svg>\r\n);\r\n\r\nReactDOM.render(\r\n\t<Countdown \r\n\t\ttimeTillDate=\"04 05 2020, 6:00 am\" \r\n\t\ttimeFormat=\"MM DD YYYY, h:mm a\" \r\n\t/>, \r\n\tdocument.getElementById('app')\r\n);\r\n\r\n// From stackoverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\r\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\r\n  var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0;\r\n\r\n  return {\r\n    x: centerX + (radius * Math.cos(angleInRadians)),\r\n    y: centerY + (radius * Math.sin(angleInRadians))\r\n  };\r\n}\r\n\r\nfunction describeArc(x, y, radius, startAngle, endAngle){\r\n\r\n    var start = polarToCartesian(x, y, radius, endAngle);\r\n    var end = polarToCartesian(x, y, radius, startAngle);\r\n\r\n    var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\r\n\r\n    var d = [\r\n        \"M\", start.x, start.y, \r\n        \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\r\n    ].join(\" \");\r\n\r\n    return d;       \r\n}\r\n\r\n// Stackoverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\r\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\r\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n}\r\n\r\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}